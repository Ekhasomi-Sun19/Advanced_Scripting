Overview

A common task in PowerShell is to manipulate textual data and either create new data or reports from the data. In this lab you will write a script that contains two functions. The first function when run will get the machines ethernet addresses, look up the vendors name. The vendors name is in a text file. The second function will load a list of song data and output a formatted report that organizes the songs by album then by song.

Requirements:

The required data files are in data directory of the psfiles download we have been using. You can get a copy here http://cf.esage.com/psfiles.zip

1. Create a script named Week8.ps1

2. Include the following author comment block

<# Program Name : <program> Date: <datecreated> Author: <yourname> Corse: CIT361 I, <yourname>, affirm that I wrote this script as original work completed by me. #>

3. Function 1

3.1. Create a function Named Get-MACVendor that returns the Vendor’s Full Name.

3.2. The script takes one optional argument $MACAddress and one Mandatory argument $DatabasePath

3.2.1. The DatabasePath accepts filename of the database to use. Don’t assume a directory location.

3.2.2. Throw an error if the database file can’t be found.

3.3. If a MAC address is specified return the Vendor of that MAC address

3.4. If the MAC address is not supplied discover the MAC addresses of the network adapters on the computer and look up the Vendor of each address. Return Each Vendor Name.

3.4.1. You can get the MAC address on windows With Get-NetAdapter. On Linux you might use the ip address command look for the ether section.

3.5. The script must work on Windows and Linux or OSX

3.6. The MAC address database is in the psfiles/data/MACDatabase.txt

4. Function 2

4.1. Create A function named Format-Songs that retrieves and formats the song data from psfiles/data/RushSongs.txt as follows

4.2. The script takes one mandatory and one optional arguments

4.2.1. $DatabasePath (madatory) is the file that contains the song information

4.2.2. $Path is the file to save the output to, if missing just return report to output stream.

4.2.3. Throw an error if the database can’t be found or the file can’t be saved.

4.3. Group songs by album then sort alphabetically by title.

4.4. (Stretch goal) List albums by year newest to oldest in the report.

4.5. Example Output